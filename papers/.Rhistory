val <- sapply(results, function(x) x[[1]])
plot(seq(0, 4, .25), val, type = "l")
val <- sapply(results, function(x) sum((x[[2]] - y)^2))
val
res <- get_est3(d, 0.44)
res
plot(d$YEAR, d$ANNUAL)
lines(d$YEAR, res[[2]])
d
tail(d)
tail(d, 20)
head(d)
dd <- d[7::150,]
dd <- d[7:150,]
head(dd)
tail(dd)
res <- get_est3(dd, 0.44)
plot(dd$YEAR, dd$ANNUAL)
lines(dd$YEAR, res[[2]])
unique(res[[2]])
install.packages("neariso")
library(neariso)
library(help=neariso)
?neariso
plot(d$YEAR, d$ANNUAL)
lines(d$YEAR, res3[[2]])
lines(d$YEAR, fit3)
objective <- Minimize(norm(y - x, 2) + 2 * sum(pos(diff(x))))
prob3 <- Problem(objective)
res3 <- solve(prob3)
plot(d$YEAR, d$ANNUAL)
lines(d$YEAR, fit3)
results
w <- get_problem_data(prob3)
w <- get_problem_data(prob3, "ECOS")
w
names(w)
w$c
w$A
w$G
q()
fit3 <- readRDS("fit-diff3.RDS")
d <- readRDS("fit-data.RDS")
d
plot(d$YEAR, d$ANNUAL)
lines(d$YEAR, fit3)
remove.packages("cvxr")
q()
showMethods(plot, ts)
showMethods(plot, "ts")
?plot
?coef
q()
pituitary
?gpava
diff(1:5)
q()
example(gpava)
?weighted.median
example(weighted.median)
res
y
w
z <- c(1:5, rep(6:9, 2))
z
median(z)
weighted.median
weighted.fractile
weighted.fractile(y, w, .5)
?gpava
?gpava
gp1
gp2
cvxr.x
cbnd(gp2, cvxr.x)
names(gp2)
gp2$z
gp2$z
gp2$x
Pnorm
?quantile_loss
b
betafull
stack
?HStack
beta1
betaRest
result$getValue(beta)
bb
b
3.888/0.53
q()
3.7/.77
q()
pituitary
duplicated(age)
duplicated(pituitary$age)
as.factor(pituitary$age)
as.integer(as.factor(pituitary$age))
library(Matrix)
m <- as.integer(as.factor(pituitary$age))
diag(m)
?cut
cut <- pituitary$age
cut
s <- split(pituitary$age)
s <- split(as.factor(pituitary$age))
?split
split(integer(1, nrow(pituitary)), pituitary$age)
split(x = integer(1, nrow(pituitary)), f = pituitary$age)
split(x = integer(1, nrow(pituitary)), f = pituitary$age)
integer(1, nrow(pituitary))
integer(nrow(pituitary))
rep(1L, nrow(pituitary))
split(x = rep(1L, nrow(pituitary), f = pituitary$age)
)
split(x = rep(1L, nrow(pituitary), f = pituitary$age))
split(rep(1L, nrow(pituitary), f = pituitary$age))
split(pituitary, f = pituitary$age))
split(pituitary, f = pituitary$age)
split(pituitary, pituitary$age)
split(pituitary)
which split
split
base::split(rep(1L, nrow(pituitary), f = pituitary$age))
base::split(x = rep(1L, nrow(pituitary), f = pituitary$age))
base::split(x = rep(1L, nrow(pituitary)), f = pituitary$age))
base::split(x = rep(1L, nrow(pituitary)), f = pituitary$age)
base::split(x = pituitary$age, f = pituitary$age))
base::split(x = pituitary$age, f = pituitary$age)
base::split(x = seq_len(nrow(pituitary)), f = pituitary$age)
secondary_constraints
cvxr.x
resulty
result$value
y
x
cvxr.x
x
x@id
result
x
x@id
q()
constraints
cvxr.x
secondary_constraints
cvxr.x
base::split(x = seq_len(nrow(pituitary)), f = pituitary$age)
sol_x2
?gpava
weighted.mean
?weighted.mean
xm
sum(x * wt)
sol_x2
result2$value
?block_add
tertiary_means
tertiary_blocks
?diag
diag(0, nrow=5)
diag(0, nrow=5)[2:4] <- 1
diag(0, nrow=5)[2:4, 2:4] <- 1
w <- diag(0, nrow=5)
w[2:4, 2:4] <- 1
w
diag(3:4, nrow=5)
w
w <- diag(5)
w
w[2:4] <- 0
w
v <- numeric(5)
v[2:4] <- 1
v
diag(v)
block_means
do.call(VStack, block_means)
block_means
res3$z
res3$x
lapply(block_mean_vector, value)
block_mean_vector
lapply(block_means, value)
lapply(block_mean_vector, function(w) result3$getValue(w))
result3$getValue(block_mean_vector)
order(result3$getValue(block_mean_vector))
ww <- result3$getValue(block_mean_vector)
ww[ww >= 0]
ww
ww[, c(1:3, 15:17, 29:31, 43,44])
ww[, c(1:3, 15:17, 29:31, 43,44]
ww[, c(1:3, 15:17, 29:31, 43,44)]
ww[, c(1:3, 15:17, 29:31, 43:44)]
ww
ww[c(1:3, 15:17, 29:31, 43:44), ]
order(ww[c(1:3, 15:17, 29:31, 43:44), ])
?gpava
pituitary
sol_x3
res3$x
tapply(res3$x, mean)
tapply(sol_x3, res3$x, mean)
tapply(sol_x3, res3$x, mean)
length(tapply(sol_x3, res3$x, mean))
length(tapply(sol_x3, res3$z, mean))
tapply(sol_x3, res3$z, mean)
?gpava
res3$w
res3$z
res3$x
res3$y
sum((res3$y - res3$x)^2)
result3$value
block_means
y
blocks
block_mean_vector
?numeric
result3
id(block_mean_vector)
id(x3)
block_means
x3
sol_x3
plot(pituitary$age, sol_x3, col="red")
points(pituitary$age, y, col="blue")
plot(pituitary$age, sol_x3, col="red")
plot(pituitary$age, y, col="blue")
res3$x
write.csv(pituitary, file="pit.csv")
q()
block_mean_vector
Pnorm
plot(d$YEAR, y)
lines(d$YEAR, fit3)
q()
library(isotone)
data("pituitary")
res1 <- with(pituitary, gpava(age, size, ties = "primary"))
res2 <- with(pituitary, gpava(age, size, ties = "secondary"))
res3 <- with(pituitary, gpava(age, size, ties = "tertiary"))

n <- nrow(pituitary) ; y <- matrix(pituitary$size, ncol = 1)
x <- Variable(n)
objective <- Minimize(Pnorm(y - x, 2))
constraint <- list(diff(x) >= 0)
problem <- Problem(objective, constraint)
result <- solve(problem)
x_primary <- result$getValue(x)

secondary_constraints <- lapply(base::split(x = seq_len(nrow(pituitary)),
                                            f = pituitary$age),
                                function(i) diff(x[i]) == 0)
constraint <- c(diff(x) >= 0,
                 secondary_constraints)
problem <- Problem(objective, constraint)
x_secondary <- solve(problem)$getValue(x)

blocks <- base::split(x = seq_len(nrow(pituitary)),
                      f = pituitary$age)
block_means <- lapply(blocks, function(i) {
                          v <- numeric(n) 
                          v[i] <- 1.0 / length(i)
                          matrix(v, nrow = 1) %*% x
                      })
block_mean_vector <- do.call(VStack, block_means)
constraint <- list(diff(block_mean_vector) >= 0)
problem <- Problem(objective, constraint)
x_tertiary <- solve(problem)$getValue(x3)

x_tertiary <- solve(problem)$getValue(x)
d <- data.frame(iso1 = res1$x, cvxr1 = x_primary, 
                iso2 = res2$x, cvxr2 = x_secondary, 
                iso3 = res3$x, cvxr3 = x_tertiary)
d

print(d, digits = 3)
print(d, digits = 4)
x_s <- x_primary
x_p <- x_primary
x_s <- x_secondary
x_t <- x_tertiary
d <- data.frame(iso_p = res1$x, cvxr_p = x_primary, 
                iso_s = res2$x, cvxr_s = x_secondary, 
                iso_t = res3$x, cvxr_t = x_tertiary)

print(d, digits = 4)
xtable(d, digits=4)
library(kableExtra)
 kable(d, format = "latex", caption = "Estimates from \\\\texttt{gpava} and \\\\texttt{cvxr} for pituitary data, booktabs = T) %>% kable_styling(latex_options = c("striped", "hold_position"))
 kable(d, format = "latex", caption = "Estimates from \\\\texttt{gpava} and \\\\texttt{cvxr} for pituitary data", booktabs = T) %>% kable_styling(latex_options = c("striped", "hold_position"))
 kable(d, format = "latex", caption = "Estimates from \\\\texttt{gpava} and \\\\texttt{cvxr} for pituitary data", booktabs = T) %>% kable_styling(latex_options = c("striped", "hold_position"))
options(digits = 4)
 kable(d, format = "latex", caption = "Estimates from \\\\texttt{gpava} and \\\\texttt{cvxr} for pituitary data", booktabs = T) %>% kable_styling(latex_options = c("striped", "hold_position"))
d
str(results)
temp1
str(temp1)
seq(0, 2, .25)
paste("lambda_", seq(0, 2, .25), sep="")
plot.data3
w
dim(w)
head(w)
w
head(w)
w
names(w)
?facet_wrap
head(w)
head(w)
dim(w)
plot3
plot4
library(boot)
?boot
nrow(d)
system.time(w <- get_neariso_estimate(d, seq_len(166), 0.44))
system.time(w <- get_neariso_estimate(d, seq_len(166), 0.44))
3800/60
system.time(ans <- boot(data = d, statistic = get_neariso_estimate, R = 10, lambda = 0.44))
3467/3600
ans$t[, 1]
library(isotone)
data(pituitary)
?with
{i <- 1:10
i + 1}
x_p
d <- data.frame(iso_p = res1$x, cvxr_p = x_primary, 
                iso_s = res2$x, cvxr_s = x_secondary, 
                iso_t = res3$x, cvxr_t = x_tertiary)

d
d <- data.frame(res1$x, x_p, res2$x, x_s, res3$x, x_t)
d
options(digits = 4)
d
x <- p
x_p


?barplot
library(testthat)
beta_nnls
beta_ols
beta_nnls
beta_ols
beta_nnls
cbind(beta_nnls, beta_ols)
beta_ols
beta_nnls
bb <- Variable(m)
p <- Problem(Minimize(sum((y-X %*% bb)^2)), list(bb >= 0))
r <- solve(p)
r$getValue(bb)
library(ggplot2)
coeff
names(coeff) <- paste("beta
names(coeff) <- paste("beta", seq_len(b) - 1, sep="_")
names(coeff) <- paste("beta", seq_along(b) - 1, sep="_")
coeff
rownames(coeff) <- paste("beta", seq_along(b) - 1, sep="_")
coeff
names(coeff) <- NULL
coeff
expression(names(coeff))
d <- data.frame(var=names(coeff), coeff)
d <- data.frame(var=rownames(coeff), coeff)
d
library(tidyr)
dd <- gather(d, key="what", value="value")
dd
dd <- gather(d, key="var", value="value")
dd
dd <- gather(d, key="var", value="value", factor_key = TRUE)
dd
names(dd) <- c("coeff", "type", "value")
d
dd
dd
d
dd
dd
dd
coeff_labels
coeff_labels
)
coeff_labels
rownames(coeff)
levels(dd$coeff)
dd
dd$coeff
save.image("neariso.RData")
q()
library(cvxr)
library(ggplot2)
load("nearconvex.RData")
ls()
?boot.ci
?boot.ci
boot.bca <- boot.ci(boot.out = ans, type = "bca")
boot.bca <- boot.ci(boot.out = ans, type = "normal")
boot.bca
boot.bca <- boot.ci(boot.out = ans, type = "normal")
boot.bca
names(boot.bca)
boot.bca <- boot.ci(boot.out = ans)
ans
names(ans)
ans$R
boot.bca <- boot.ci(boot.out = ans, type="norm")
boot.bca
names(boot.bca)
boot.bca$normal
  w <-      boot.ci(city.boot, conf = c(0.90, 0.95),
             type = c("norm", "basic", "perc", "bca"))

w
names(w)
w$normal
city
ratio
ans$t
dim(ans$t)
dim(ans$t0)
ans$t0
dim(ans$t0)
dim(ans$t1)
dim(ans$t)
cbind(ans$t0, ans$t[1, ])
?boot
cbind(fit, ans$t0)
head(cbind(fit, ans$t0))
identical(fit, ans$t0)
dim(ans$t)
dim(ans$t0)
m <- sapply(1:100, boot.ci, boot.out = ans, conf = 0.95, type = "norm")
m
m <- lapply(1:100, boot.ci, boot.out = ans, conf = 0.95, type = "norm")
m[[1]]
m[[2]]
names(m[[1]])
m[[1]]$normal
length(m[[1]]$normal)
m[[1]]$normal[[2]]
m[[1]]$normal[-1]
head(data.nearconvex)
?boot.ci
m[[1]]$t0
m[[2]]$t0
m[[3]]$t0
m
m
dim(m)
dim(m)
dim(ans$t)
dim(m)
ddd
(plot.nearconvex <- ggplot(data = ddd) +
     geom_point(mapping = aes(year, annual), color = "red") +
     geom_line(mapping = aes(year, est), color = "blue") +
     geom_ribbon(mapping = aes(x = year, ymin = lower,ymax = upper),alpha=0.3) +
     labs(x = "Year", y = "Temperature Anomalies")
)
(plot.nearconvex <- ggplot(data = ddd) +
     geom_point(mapping = aes(year, annual), color = "red") +
     geom_line(mapping = aes(year, est), color = "blue") +
     geom_ribbon(mapping = aes(x = year, ymin = lower,ymax = upper),alpha=0.3) +
     labs(x = "Year", y = "Temperature Anomalies")
)
mm
ddd
head(data.nearconvex)
head(ddd)
ddd[1:50, ]
ddd[1:51, ]
ddd[51, ]
data.nearconvex[51, ]
?boot.ci
var(ans$t[, 51])
sd(ans$t[, 51])
sd(ans$t[, 51]) * 1.96
dd[51, "est"] - sd(ans$t[, 51]) * 1.96
ddd[51, "est"] - sd(ans$t[, 51]) * 1.96
var(ans$t)
dim(var(ans$t))
names(ans)
ans
ddd[51, ]
data.nearconvex[51, ]
ddd[51, 3:5] + -1.884458e-02
n
q()
library(cvxr)
q()
system.time(res1 <- get_nearconvex_estimate(d, seq_len(nrow(d)), lambda=0.44))
q()
